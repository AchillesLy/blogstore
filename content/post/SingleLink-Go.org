#+TITLE:  SingleLink-Go
#+date:   2021-1-25
*Singlelink*

/this demo use to show us what the singlelink could look like in the List/

* todo

** to describe the code detail


   #+begin_src  go
   
   package main

   import (
   "fmt"
   )xg
   
   //define a Hero
   
   type HeroNode struct {
	no       int
	name     string
	nickname string
	
	next *HeroNode // it means this point toward next Node
	}
	
	//2 step, show the Node
	//3 step, delete the Node
	
	// InsertHeroNode
	//1 step, insert the Node, attention the Node is not sort by order
	func InsertHeroNode(head *HeroNode, newHeroNode *HeroNode) {
	
	temp := head
	
	for {
	if temp.next == nil {
	break
		}
		temp = temp.next
		}
		
		//this means if the temp.next is null, the link has place to put the newNode
		temp.next = newHeroNode
		}
		
		// ListHeroNode show all the node in the list
		func ListHeroNode(head *HeroNode) {
		temp := head
		
		if temp.next == nil {
		fmt.Printf("this is a empty list...")
		return
		}
		
		//reseving this list
		
		for {
		fmt.Printf("[%d, %s, %s]==>", temp.next.no, temp.next.name, temp.next.nickname)
		
		temp = temp.next
		if temp.next == nil {
		break
		}
		
		}
		
		}
		
		// DelheroNode delete the Node
		func DelheroNode(head *HeroNode, id int)  {
		temp := head
		flag := false
		
		for  {
		if temp.next == nil {
		break
		} else if temp.next.no == id {
		flag = true
		break
		}
		temp = temp.next
		}
		
		if flag {
		temp.next = temp.next.next
		} else {
		fmt.Printf("sorry the id already been deleted\n")
		
		}
		
		
		}

		// main func to run all the function
		func main() {
		//creat the headNode, which is empty
		head := &HeroNode{}
		
		//creat a newNode, which means add to the end of the link
		
		head2 := &HeroNode{
		no:       2,
		name:     "Luffy",
		nickname: "Lu",
		}
		
		head1 := &HeroNode{
		no:       1,
		name:     "Achilles",
		nickname: "Yao",
		}
		
		InsertHeroNode(head, head1)
		InsertHeroNode(head, head2)
		
		//show the Nodelist
		ListHeroNode(head)


		//delete Node
		fmt.Println()

		DelheroNode(head, 1)
		DelheroNode(head, 3)
		ListHeroNode(head)
	
		}

   #+end_src
